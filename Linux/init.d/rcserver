#!/usr/bin/bash
# chkconfig: 2345 20 80
# description: RedCanary Server

# Source function library.
. /etc/init.d/functions
SS_USER=sigmastream
FD_LIMIT=10000
SERVER_HOST_NAME=127.0.0.1
REMOTE_JMX_ENABLE=false
REMOTE_DEBUG_ENABLE=false
RCS_HOME=/apps/rcserver
REDCANARY_SERVER_HOME=$(readlink ${RCS_HOME})
REDCANARY_SERVER_LOG=${REDCANARY_SERVER_HOME}/startup.log
JAVA_HOME=${REDCANARY_SERVER_HOME}/java/bin/java
REMOTE_DEBUG_ARGS=("-Xdebug -Xrunjdwp:transport=dt_socket,address=8004,server=y,suspend=n")
REMOTE_JMX_ARGS=("-Djava.rmi.server.hostname=${SERVER_HOST_NAME} -Dcom.sun.management.jmxremote.port=10008 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false")
JAVA_TMP_DIR="-Djava.io.tmpdir=${REDCANARY_SERVER_HOME}/temp/"
JAVA_OPTIONS=(${JAVA_OPTIONS[*]} "-XX:+UnlockCommercialFeatures -XX:+FlightRecorder -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:+UseCMSInitiatingOccupancyOnly -XX:+ScavengeBeforeFullGC -XX:+CMSScavengeBeforeRemark -Xms1024m -Xmx1024m -XX:MaxGCPauseMillis=250 -XX:ParallelGCThreads=20 -XX:MetaspaceSize=256m -XX:NewRatio=2 -XX:SurvivorRatio=3 -XX:TargetSurvivorRatio=70 -XX:MaxTenuringThreshold=8 -XX:PretenureSizeThreshold=64m -XX:CMSInitiatingOccupancyFraction=70 -XX:CMSMaxAbortablePrecleanTime=6000 -XX:+ParallelRefProcEnabled -XX:+DisableExplicitGC -verbose:gc -Xloggc:${REDCANARY_SERVER_HOME}/logs/gc-%t.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=100 -XX:GCLogFileSize=10M -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintGCDetails -XX:+PrintTenuringDistribution -XX:+PrintCommandLineFlags -XX:+PrintReferenceGC -XX:+PrintAdaptiveSizePolicy -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=${REDCANARY_SERVER_HOME}/heapdump/rc-server.hprof $JAVA_TMP_DIR")

if [ "$REMOTE_DEBUG_ENABLE" = true ]; then
  JAVA_OPTIONS="${REMOTE_DEBUG_ARGS} ${JAVA_OPTIONS}"
fi

if [ "$REMOTE_JMX_ENABLE" = true ]; then
  JAVA_OPTIONS="${JAVA_OPTIONS} ${REMOTE_JMX_ARGS}"
fi

REDCANARY_SERVER_ARGS="basePath=${REDCANARY_SERVER_HOME}/"

getrcserverstatus() {
    RCSERVERSTATUSSTRING=$(ps ax |grep -v grep| grep ${REDCANARY_SERVER_HOME})
    echo $RCSERVERSTATUSSTRING | grep -q ${REDCANARY_SERVER_HOME}
    RCSERVERSTATUS=$?
}

case "$1" in
start)
   getrcserverstatus
   if [ $RCSERVERSTATUS -eq 0 ]; then
      echo "[!] RedCanary-Server is already running."
      exit 0
   fi
   ulimit -n "$FD_LIMIT"
   if [ -n "$SS_USER" ];then
      sudo chown -R $SS_USER:$SS_USER $REDCANARY_SERVER_HOME/ > /dev/null 2>&1
      su $SS_USER -c "exec ${JAVA_HOME} ${JAVA_OPTIONS} -jar ${REDCANARY_SERVER_HOME}/rc-server.jar $REDCANARY_SERVER_ARGS > ${REDCANARY_SERVER_LOG} 2>&1 &"
      echo "Command: ${JAVA_HOME} ${JAVA_OPTIONS}  -jar  ${REDCANARY_SERVER_HOME}/rc-server.jar $REDCANARY_SERVER_ARGS > ${REDCANARY_SERVER_LOG}"
      $0 status
   else
      exec ${JAVA_HOME} ${JAVA_OPTIONS} -jar ${REDCANARY_SERVER_HOME}/rc-server.jar $REDCANARY_SERVER_ARGS > ${REDCANARY_SERVER_LOG} 2>&1 &
   fi
   ;;
stop)
   getrcserverstatus
   if [ $HUMMINGBIRDSTATUS -ne 0 ]; then
      echo "[!] RedCanary-Server is already stopped"
      exit 1
   fi
   su $SS_USER -c "kill -9  $(pgrep -f "${REDCANARY_SERVER_HOME}")"
   $0 status
   ;;
restart)
   $0 stop
   $0 start
   ;;

status)
   getrcserverstatus
   if [ $RCSERVERSTATUS -eq 0 ]; then
      echo "[#] RedCanary-Server is running on pid=$(pgrep -f "${REDCANARY_SERVER_HOME}")"
      exit 0
      # ps ax | grep ${HUMMINGBIRD_HOME} | grep -v grep | sed 's/^[[:space:]]*\([[:digit:]]*\).*:[[:digit:]][[:digit:]][[:space:]]\(.*\)/\1 \2/'
   else
      echo "[#] RedCanary-Server is stopped"
      exit 1
   fi
   # if [ -e ${REDCANARY_SERVER_HOME}/rcserver.pid ]; then
   #    echo RedCanary-Server successfully started with pid=`cat ${REDCANARY_SERVER_HOME}/rcserver.pid`
   # else
   #    echo RedCanary-Server is stopped.
   #    exit 1
   # fi
   ;;
*)
   echo "Usage: $0 {start|stop|status|restart}"
esac

exit 0

