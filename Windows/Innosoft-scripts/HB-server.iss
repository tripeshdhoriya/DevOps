; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "KingFisher-Server"
#define MyAppVersion "2.0.3"
#define MyAppPublisher "SigmaStream"
#define MyAppURL "http://www.sigmastream.com/"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
//Password=SigmaStream#1
AppId={{2C9DEAF0-823F-46AB-A65C-2D05356EAC2A}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
DefaultDirName=C:\SigmaStream\KingFisher
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=no
DisableDirPage=no
PrivilegesRequired=admin
LicenseFile=D:\setups\scripts\SS_InstallerTerms.txt
SetupIconFile=D:\setups\scripts\HB-logo.ico
OutputBaseFilename=HummingBird-1003-6350
OutputDir=D:\SigmaStream\Installers\HummingBird\
Compression=lzma
SolidCompression=yes
UninstallDisplayIcon=D:\setups\scripts\HB-logo.ico

[Code]
function NextButtonClick(CurPageID: Integer): Boolean;
begin
  Result := True;
  { if we're on the directory selection page and the value returned by }
  { the WizardDirValue function contains at least one space, then... }
  if (CurPageID = wpSelectDir) and (Pos(' ', WizardDirValue) > 0) then
  begin
    Result := False;
    MsgBox('Target installation directory cannot contain spaces. ' +
      'Choose a different one.', mbError, MB_OK);
  end;
end;
////////////////////////////////////////////////////////////////////////////

// ADDING WARNING MESSAGE TO PRINT AT END OF INSTALLATION.

////////////////////////////////////////////////////////////////////////////

[code]
function GetCustomSetupExitCode: Integer;
begin
  MsgBox('Please follow installation document for further configurations, In case of any query please write to "support@sigmastream.com".', mbInformation, MB_OK);
  Result := 0;
end;

////////////////////////////////////////////////////////////////////////////

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

//ADDING FILES TO DEPLOY VIA .EXE INSTALLER
[Files]
Source: "D:\setups\HummingBird\server\*"; DestDir: "{app}\server"; Flags: ignoreversion recursesubdirs createallsubdirs 
Source: "D:\setups\HummingBird\postgresql-9.6.6-3-windows-x64.exe"; DestDir: "{tmp}"; AfterInstall: RunPostgresInstaller; Flags: deleteafterinstall
Source: "D:\setups\HummingBird\apache-cassandra-3.11.4\*"; DestDir: "{app}\apache-cassandra-3.11.4"; Flags: ignoreversion recursesubdirs createallsubdirs
//Source: "D:\setups\HummingBird\unzip.exe"; DestDir: "{tmp}"; Flags: deleteafterinstall
//Source: "D:\setups\HummingBird\python-2.7.16.msi"; DestDir: "{tmp}"; Flags: ignoreversion recursesubdirs createallsubdirs deleteafterinstall

//////////////////////////////
//CALLING POSTGRESQL INSTALLER
//////////////////////////////
[Code]
procedure RunPostgresInstaller;

var
  Rcode: Integer;
begin
     
  MsgBox('PostgreSQL installer is about to run, It may take while, Please be patience.',mbInformation, MB_OK);
  if not Exec(ExpandConstant('{tmp}\postgresql-9.6.6-3-windows-x64.exe'), '', '', SW_SHOWNORMAL,
    ewWaitUntilTerminated, Rcode)
  then
    MsgBox('postgreSQL installer failed to run!' + #13#10 +
      SysErrorMessage(Rcode), mbError, MB_OK);
end;

//////////////////////////////////
//EXECUTING LISTED RUNTIME FILES.
//////////////////////////////////

[Run]
//Filename: "{tmp}\unzip.exe"; Parameters: "{app}\server.zip -d {app}"; StatusMsg: "Extracting Server Files, Sit back it may take while..." ; Flags: runhidden 
//Filename: "{tmp}\unzip.exe"; Parameters: "{app}\apache-cassandra-3.11.4.zip -d {app}"; StatusMsg: "Setting Up Cassandra, Sit back it may take while...";  Flags: runhidden 
//Filename: "{app}\apache-cassandra-3.11.4\cassandra-install.bat"; Parameters: "install"; StatusMsg: "Installing Cassandra As Service,It won't take long..";  Flags: runhidden

//Filename: "{app}\server\DB_dump\postgres\setup-postgres.bat"; StatusMsg: "Setting Up Postgres...";  Flags: runmaximized
//Filename: "msiexec.exe"; Parameters: "/i ""{tmp}\python-2.7.16.msi"" /qb"; WorkingDir: {app};
//Filename: "C:\Program Files\PostgreSQL\9.6\bin\createdb.exe"; Parameters: " -U postgres -E UTF8 -O postgres "; Components: ProjectName; Flags: runhidden


//FOLLOWING FILES WILL BE EXECUTED IN UNINSTALLATION PROCESS.
[UninstallRun]
//Filename: {sys}\sc.exe; Parameters: "stop YellowHammer-Server" ; Flags: runhidden
//Filename: {sys}\sc.exe; Parameters: "delete YellowHammer-Server" ; Flags: runhidden